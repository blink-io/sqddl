SELECT
    schemas.nspname AS table_schema
    ,tables.relname AS table_name
    ,columns.attname AS column_name
    ,CASE
        WHEN domain_base_type.oid IS NOT NULL THEN format_type(domain_base_type.oid, domain_base_type.typtypmod)
        ELSE format_type(columns.atttypid, columns.atttypmod)
    END AS column_type
    ,enum.oid IS NOT NULL AS is_enum
    ,COALESCE(domain_type.typname, '') AS domain_name
    -- https://stackoverflow.com/a/3351120 precision and scale calculation
    ,CASE columns.atttypid
        WHEN 1700 /* numeric */ THEN
            CASE WHEN columns.atttypmod = -1 THEN '0' ELSE (((columns.atttypmod - 4) >> 16) & 65535)::TEXT END
        ELSE ''
    END AS numeric_precision
    ,CASE columns.atttypid
        WHEN 1700 /* numeric */ THEN
            CASE WHEN columns.atttypmod = -1 THEN '0' ELSE ((columns.atttypmod - 4) & 65535)::TEXT END
        ELSE ''
    END AS numeric_scale
    ,CASE columns.attidentity
        WHEN 'd' THEN 'GENERATED BY DEFAULT AS IDENTITY'
        WHEN 'a' THEN 'GENERATED ALWAYS AS IDENTITY'
        ELSE ''
    END AS column_identity
    ,columns.attnotnull AS is_notnull
    ,CASE columns.attgenerated
        WHEN 's' THEN COALESCE(pg_get_expr(pg_attrdef.adbin, pg_attrdef.adrelid, TRUE), '')
        ELSE ''
    END AS generated_expr
    ,COALESCE(columns.attgenerated = 's', FALSE) AS generated_expr_stored
    ,CASE pg_collation.collname
        WHEN 'default' THEN ''
        ELSE COALESCE(pg_collation.collname, '')
    END AS collation_name
    ,CASE columns.attgenerated
        WHEN 's' THEN ''
        ELSE COALESCE(pg_get_expr(pg_attrdef.adbin, pg_attrdef.adrelid, TRUE), '')
    END AS column_default
    ,COALESCE(col_description(columns.attrelid, columns.attnum), '') AS comment
FROM
    pg_attribute AS columns
    JOIN pg_class AS tables ON tables.relkind = 'r' AND tables.oid = columns.attrelid
    JOIN pg_namespace AS schemas ON schemas.oid = tables.relnamespace
    LEFT JOIN pg_attrdef ON pg_attrdef.adrelid = tables.oid AND pg_attrdef.adnum = columns.attnum
    LEFT JOIN pg_collation ON pg_collation.oid = columns.attcollation
    LEFT JOIN pg_type AS enum ON enum.typtype = 'e' AND enum.oid = columns.atttypid
    LEFT JOIN pg_type AS domain_type ON domain_type.oid = columns.atttypid AND domain_type.typtype = 'd'
    LEFT JOIN pg_type AS domain_base_type ON domain_base_type.oid = domain_type.typbasetype
WHERE
    columns.attnum > 0           -- exclude system columns
    AND NOT columns.attisdropped -- exclude dropped columns
    {{- if not .IncludeSystemCatalogs }}
    AND schemas.nspname <> 'information_schema' AND schemas.nspname NOT LIKE 'pg_%'
    {{- end }}
    {{- if .Schemas }}
    AND schemas.nspname IN ({{ mklist .Schemas }})
    {{- else if .ExcludeSchemas }}
    AND schemas.nspname NOT IN ({{ mklist .ExcludeSchemas }})
    {{- end }}
    {{- if .Tables }}
    AND tables.relname IN ({{ mklist .Tables }})
    {{- else if .ExcludeTables }}
    AND tables.relname NOT IN ({{ mklist .ExcludeTables }})
    {{- end }}
ORDER BY
    schemas.nspname
    ,tables.relname
    ,columns.attnum
;
